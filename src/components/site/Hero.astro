---
const links = [
  { href: '/about', label: 'About' },
  { href: '/work', label: 'Work' },
  { href: '/projects', label: 'Projects & Tools' },
];
---
<section
  data-hero
  class="relative isolate overflow-hidden bg-gradient-to-b from-background via-background/95 to-secondary/10"
>
  <div class="relative mx-auto grid min-h-[160vh] max-w-screen-xl grid-cols-1 gap-16 px-6 pb-24 pt-20 md:min-h-[180vh] md:grid-cols-[minmax(0,0.65fr)_minmax(0,0.35fr)] md:px-8 lg:px-12">
    <div class="flex flex-col justify-center gap-8">
      <div class="space-y-6">
        <p class="inline-flex w-fit items-center gap-3 rounded-full border border-secondary/50 bg-secondary/20 px-4 py-2 text-[0.7rem] font-semibold uppercase tracking-[0.35em] text-secondary-foreground shadow-sm">
          <span class="inline-flex h-1.5 w-1.5 rounded-full bg-accent" aria-hidden="true"></span>
          Entrepreneur &amp; Strategic Integrator
        </p>
        <h1 class="font-display text-5xl font-semibold leading-tight tracking-tight text-foreground md:text-6xl lg:text-7xl">
          Cameron Guthrie
        </h1>
        <p class="max-w-xl text-lg text-muted md:text-xl">
          I build across domains, tame chaos, and turn complex ideas into working companies and tools.
        </p>
      </div>
      <nav aria-label="Hero links">
        <ul class="flex flex-wrap gap-3 text-sm font-medium">
          {links.map((link) => (
            <li>
              <a
                href={link.href}
                class="inline-flex items-center gap-2 rounded-full border border-secondary/60 bg-card/80 px-5 py-2 text-secondary-foreground transition hover:border-primary/60 hover:bg-secondary/35 hover:text-primary focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring"
              >
                <span>{link.label}</span>
              </a>
            </li>
          ))}
        </ul>
      </nav>
    </div>
    <div class="relative">
      <div class="sticky top-24 flex h-[calc(100vh-6rem)] items-end justify-center md:top-20">
        <div aria-hidden="true" class="pointer-events-none absolute inset-0">
          <div
            class="absolute inset-0 grid place-items-center text-center text-[clamp(5rem,13vw,18rem)] font-display font-black tracking-tight text-accent/15 transition-transform duration-700 ease-out motion-reduce:translate-y-0 motion-reduce:transition-none"
            style="transform: translate3d(0, calc(var(--hero-scroll, 0) * -35%), 0);"
          >
            Cameron&nbsp;Guthrie
          </div>
        </div>
        <div class="relative z-10 flex max-h-[85vh] items-end justify-center">
          <picture>
            <source srcset="/img/cjg-bacalar-no_logo-front-image-1920x1080.webp" type="image/webp" />
            <img
              src="/img/cjg-bacalar-no_logo-front-image-1920x1080.png"
              alt="Cameron walking through Bacalar"
              width="1200"
              height="1600"
              class="h-auto max-h-full w-auto object-contain drop-shadow-[0_30px_60px_rgba(0,0,0,0.35)]"
              loading="eager"
              decoding="async"
            />
          </picture>
        </div>
      </div>
    </div>
  </div>
  <div class="pointer-events-none absolute inset-x-0 bottom-0 h-48 bg-gradient-to-t from-background to-transparent"></div>
</section>

<script is:inline>
const hero = document.querySelector('[data-hero]');
const reduceMotion = window.matchMedia('(prefers-reduced-motion: reduce)');

if (hero instanceof HTMLElement && !reduceMotion.matches) {
  let frame = null;

  const update = () => {
    frame = null;
    const scrollTop = window.scrollY - hero.offsetTop;
    const maxScroll = hero.offsetHeight - window.innerHeight;
    const progress = maxScroll > 0 ? Math.min(Math.max(scrollTop / maxScroll, 0), 1) : 0;
    hero.style.setProperty('--hero-scroll', progress.toFixed(4));
  };

  const requestTick = () => {
    if (frame === null) {
      frame = window.requestAnimationFrame(update);
    }
  };

  const cleanup = () => {
    if (frame !== null) {
      window.cancelAnimationFrame(frame);
    }
    window.removeEventListener('scroll', requestTick);
    window.removeEventListener('resize', requestTick);
    window.removeEventListener('pagehide', cleanup);
    window.removeEventListener('astro:before-swap', cleanup);
  };

  window.addEventListener('scroll', requestTick, { passive: true });
  window.addEventListener('resize', requestTick);
  window.addEventListener('pagehide', cleanup);
  window.addEventListener('astro:before-swap', cleanup);
  requestTick();
}
</script>

<script is:inline>
const heroEl = document.querySelector('[data-hero]');
if (heroEl instanceof HTMLElement) {
  const setReducedMotionState = (event) => {
    if (event.matches) {
      heroEl.style.setProperty('--hero-scroll', '0');
    }
  };

  const media = window.matchMedia('(prefers-reduced-motion: reduce)');
  setReducedMotionState(media);
  media.addEventListener('change', setReducedMotionState);
  const teardown = () => {
    media.removeEventListener('change', setReducedMotionState);
    window.removeEventListener('pagehide', teardown);
    window.removeEventListener('astro:before-swap', teardown);
  };
  window.addEventListener('pagehide', teardown);
  window.addEventListener('astro:before-swap', teardown);
}
</script>
